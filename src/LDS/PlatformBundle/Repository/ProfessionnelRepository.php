<?php

namespace LDS\PlatformBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;
/**
 * ProfessionnelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProfessionnelRepository extends \Doctrine\ORM\EntityRepository
{

	public function count_profesionnel($login ,$password) {
		$query=$this->createQueryBuilder('a')
		->select('COUNT(a.login)')
		->where('a.login = :login')
		->andWhere('a.password = :password') 
		->setParameters(['login'=> $login,'password'=> $password])->getQuery()->getSingleScalarResult();

		if ($query == 1) {
			return true;
		}
		else {
			return false;
		}

	}

	 public function count_login($login) {
		$query=$this->createQueryBuilder('a')
		->select('COUNT(a.login)')
		->where('a.login = :login')
		->setParameters(['login'=> $login])->getQuery()->getSingleScalarResult();

		if ($query == 1) {
			return true;
		}
		else {
			return false;
		}
	}
	


	public function count_mail($email) {

		$query=$this->createQueryBuilder('a')
		->select('COUNT(a.email)')
		->where('a.email = :email')
		->setParameters(['email'=> $email])->getQuery()->getSingleScalarResult();

		if ($query == 1) {
			return true;
		}
		else {
			return false;
		}
	}

	public function est_valide($login) {
		$query=$this->createQueryBuilder('a')
		->select('COUNT(a.login)')
		->where('a.login = :login')
		->andWhere('a.valide = :true')
		->setParameters(['login'=> $login, 'true' => true])->getQuery()->getSingleScalarResult();

		if ($query == 1) {
			return true;
		}
		else {
			return false;
		}
	}
}
